// Code generated by MockGen. DO NOT EDIT.
// Source: manager.go

// Package session is a generated GoMock package.
package session

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessionManagerInterface is a mock of SessionManagerInterface interface.
type MockSessionManagerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSessionManagerInterfaceMockRecorder
}

// MockSessionManagerInterfaceMockRecorder is the mock recorder for MockSessionManagerInterface.
type MockSessionManagerInterfaceMockRecorder struct {
	mock *MockSessionManagerInterface
}

// NewMockSessionManagerInterface creates a new mock instance.
func NewMockSessionManagerInterface(ctrl *gomock.Controller) *MockSessionManagerInterface {
	mock := &MockSessionManagerInterface{ctrl: ctrl}
	mock.recorder = &MockSessionManagerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionManagerInterface) EXPECT() *MockSessionManagerInterfaceMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockSessionManagerInterface) Check(arg0 *http.Request) (*Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check", arg0)
	ret0, _ := ret[0].(*Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Check indicates an expected call of Check.
func (mr *MockSessionManagerInterfaceMockRecorder) Check(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockSessionManagerInterface)(nil).Check), arg0)
}

// Create mocks base method.
func (m *MockSessionManagerInterface) Create(arg0 http.ResponseWriter, arg1 int) (*Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSessionManagerInterfaceMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSessionManagerInterface)(nil).Create), arg0, arg1)
}
